## 차례

1. 비트코인과 이더리움의 차이
2. 컨트랙트 만들어보기 예제로 알게 된 것
3. 지갑의 종류
    1. 비결정적 지갑
    2. 결정적 지갑
    3. HD 지갑
    4. 니모닉코드
4. 암호학
    1. 개인키 - 난수
    2. 공개키 - 타원곡선 암호화
    3. 암호화 해시함수
    4. 이더리움 주소
5. 트랜잭션
    1. 트랜잭션의 구조
    2. 논스
    3. 가스
    4. 수신자
    5. 값과 데이터
    6. 디지털 서명
    

## 비트코인과 이더리움의 차이

P2P, 합의 알고리즘, 디지털 서명과 해시 등 공통점도 많지만

이더리움만의 확실한 성격은 임의성과 무한 복잡성을 가진 코드를 실행할 수 있는 가상 머신을 운영하는 범용 프로그래밍이 가능한 블록체인이라는 것.

이더리움을 이야기할 때, 스마트 컨트랙트를 실행하는 탈중앙화된 컴퓨팅 인프라스트럭처이다 라고 표현한다.

이더리움은 튜링 완전언어로서 여기서 튜링 완전이란??

### 튜링완전

앨런 튜링이 처음 사용했던 단어로 

**순차적 메모리에서 기호를 읽고 쓰는 방식으로 기호를 조작하는 상태 머신으로 구성된 컴퓨터의 수학적 모델을 만들었는데, 이것이 튜링 머신이고 이 머신을 시뮬레이션 하는 데 사용할 수 있다면 시스템이 튜링 완전하다고 정의했다. 이러한 시스템을 UTM이라고 한다.**

EVM은 무한 순환을 포함한 상상 가능한 모든 계산을 코딩할 수 있다.

비트코인 기반 위에 구축하거나 새로운 블록체인을 시작해야하는 난제 직면

비트코인 기반 위에 구축? 제한된 트랜젝션 타입, 어플리케이션 종류를 제한하는 데이터 타입과 스토리지 크기.

???

### 이더리움의 구성요소

1. P2P 네트워크
2. 합의 규칙
3. 트랜잭션
4. 상태 머신
    - 이더리움 상태 전이는 바이트 코드를 실행하는 스택 기반 가상 머신인 EVM에 의해 저리된다
5. 데이터 구조
6. 합의 알고리즘
7. 경제적 보안성
8. 클라이언트

### web3

## 이더리움

### 이더

이더: 이더리움의 화폐단위, ETH 외 여러가지 기호 사용

- 1이더 = 100경 웨이(1*10^18)
- 이더리움은 시스템, 이더는 화폐

### 

---

이더리움의 주요 개발단계는 프론티어, 홈스테드, 메트로폴리스, 세레니티 등의 개발단계를 계획하였으며 중간 하드포크를 통해 업그레이드되고 있다.

이러한 하드포크에는 난이도 증가 도입, 해킹에 따른 보상 및 방지 등의 내용을 담고 있다.

---

---

## 지갑

지갑: 이더리움의 주요 사용자 인터페이스를 제공하는 소프트웨어 어플리케이션

돈에 대한 접근 통제, 키와 주소 관리, 잔액 추적, 트랜잭션 생성 및 서명 제어

메타마스크, 잭스, 마이이더 월렛 등

---

하나의 개인키와 주소를 가지고 모든 것을 처리하는 것 → 편리하지만 보안 bad

모든 트랜잭션에 새로운 키를 사용하는 것 → 보안 좋지만 관리 bad

그 사이에 적절한 무언가를 찾아야 한다.

---

지갑은 이더, 토큰을 보유하는 것이 아닌 **키**만 보유

키로 트랜잭션에 서명 → 네트워크에서 토큰 제어

- 비결정적 지갑 : 각각의 키를 무작위적으로 추출
    
    왜 관리하기 힘듦?→ ??? p.91
    
- 결정적 지갑 : 모든 키가 시드라는 단일 마스터 키로부터 파생
    
    → 원래의 시드를 갖고 있다면 다시 키를 파생시킬 수 있음.
    
    니모닉 코드 단어 : 시드가 단어 목록으로 인코딩되어 있는 것
    
    BIP-32 : HD 지갑 → 가장 진보한 형태의 결정적 지갑
    
    BIP-39 : 니모닉 코드 단어
    
    BIP-43 : 다목적 HD 지갑 구조
    
    BIP-44 : 복수화폐 및 복수계정 지갑
    

### HD 지갑

### 니모닉 코드 단어

니모닉 생성 원리, 과정

---

---

## 암호학

이더리움은 EOA(외부 소유 계정), 컨트랙트 두가지 유형의 계정이 존재

디지털 개인키, 이더리움 주소, 디지털 서명을 통해 외부 소유 계정의 이더 소유권을 확립

- 개인키: 단순히 무작위로 선택한 숫자
    
    컨트랙트에 대한 접근 뿐 아니라 해당 이더리움 주소의ㅘ 관련된 모든 자금에 대한 사용자제어의 근원
    
    디지털 서명을 만든는데 사용함.
    
    - 이 과정에서 무작위성, 즉 엔트로피를 확보해야함
- 공개키 : 타원곡선 방정식을 만족하는 x, y 좌표의 집합, 개인키로부터 파생됨.
    
    K = k * G
    
    G는 상수임. 정해져있음
    
    K(x, y)로 표현되면 공개키는 0x04{x}{y}가 된다
    

---

---

## 트랜잭션

### 트랜잭션의 구조

- 논스
- 가스가격
- 가스한도
- 수신자
- 값
- 데이터
- v, r, s